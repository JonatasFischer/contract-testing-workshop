version: "3"

services:
  postgres:
    image: postgres
    healthcheck:
      test: psql postgres --command "select 1" -U postgres
    volumes:
      - postgres-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres

  pact-broker:
    image: "pactfoundation/pact-broker:2.110.0-pactbroker2.107.1"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "wget --spider --tries=1 --timeout=30 http://localhost:8080/diagnostic/status/heartbeat/ || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3

    environment:
      PACT_BROKER_PORT: '8080'
      PACT_BROKER_DATABASE_URL: "mysql2://root:root@mysql8:3306/pact-broker"
      PACT_BROKER_LOG_LEVEL: DEBUG
      PACT_BROKER_HTTP_DEBUG_LOGGING_ENABLED: TRUE
      PACT_BROKER_SQL_LOG_LEVEL: INFO
      VERBOSE: true
      # PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES is only needed for docker-compose
      # because the database takes longer to start up than the puma process
      # Should not be needed in production.
      PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES: "5"
      # The list of allowed base URLs (not setting this makes the app vulnerable to cache poisoning)
      # This list allows the app to be addressed from the host and from within another docker container correctly
      # Ngnix config below makes the app accessible on ports 443 and 80, while the Ruby application itself runs on port 9292
      PACT_BROKER_BASE_URL: 'http://127.0.0.1 http://localhost'
      # PACT_BROKER_BASIC_AUTH_USERNAME: yoda
      # PACT_BROKER_BASIC_AUTH_PASSWORD: flyingrock

  # Nginx is not necessary, but demonstrates how
  # one might use a reverse proxy in front of the broker,
  # and includes the use of a self-signed TLS certificate
  nginx:
    image: nginx:alpine
    depends_on:
      pact-broker:
        condition: service_healthy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "443:443"
      - "80:80"
  mysql8:
    container_name: mysql8
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pact-broker
      #      MYSQL_USER: sandbox_user
      #      MYSQL_PASSWORD: passpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3306:3306'
    volumes:
      - './docker/db/data:/var/lib/mysql'
volumes:
  postgres-volume: